{"version":3,"sources":["personsService.js","components/Notification.js","components/Search.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","delete","put","res","Notification","message","color","errorStyle","borderColor","className","style","Search","filter","onChangeFilter","value","onChange","PersonForm","newName","newNumber","onSubmitHandler","onChangeNameHandler","onChangeNumberHandler","onSubmit","type","Persons","persons","onDeleteHandler","map","person","name","number","onClick","App","useState","setPersons","setNewName","setNewNumber","setFilter","notify","setNotify","notifyColor","setNotifyColor","callNotification","setTimeout","useEffect","personsService","allPersons","displayedPersons","includes","event","target","toLocaleLowerCase","preventDefault","indexOfPersonExist","p","indexOf","existPersonID","window","confirm","returnedPerson","console","log","concat","find","deletedPerson","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a7167a9.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst create = (newPerson) => {\n    const request =  axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newPerson) => {\n    return axios.put(`${baseUrl}/${id}`, newPerson).then(res => res.data)\n}\n\nexport default {getAll, create, deletePerson, update}","import React from 'react';\n\nconst Notification = ({ message, color }) => {\n    const errorStyle = {\n        color: color,\n        borderColor: color\n    }\n    \n    if(message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"notification\" style={errorStyle}>\n        { message }\n      </div>\n    )\n}\n\nexport default Notification;","import React from 'react'\n\nconst Search = ({filter, onChangeFilter}) => {\n    return (\n      <div>\n        filter shown with <input value={filter} onChange={onChangeFilter} />\n      </div>\n    )\n}\n\nexport default Search;\n","import React from 'react'\n\nconst PersonForm = ({newName, newNumber, onSubmitHandler,onChangeNameHandler,onChangeNumberHandler }) => {\n    return (\n      <form onSubmit={onSubmitHandler}>\n          <div>\n            name: <input value={newName} onChange={onChangeNameHandler} />\n          </div>\n          <div>\n            number: <input value={newNumber} onChange={onChangeNumberHandler} />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n      </form>\n    )\n}\n\nexport default PersonForm;","import React from 'react'\n\nconst Persons = ({persons, onDeleteHandler}) => {\n    return (\n      <div>\n        {persons.map((person) => <div key={person.name}>{person.name}{' '}{person.number}<button onClick={() => onDeleteHandler(person.id)}>delete</button></div>)}\n      </div>\n    )\n}\n\nexport default Persons;","import React, { useEffect, useState } from 'react'\nimport personsService from './personsService'\n\nimport Notification from './components/Notification'\nimport Search from './components/Search'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\n\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notify, setNotify ] = useState(null)\n  const [ notifyColor, setNotifyColor ] = useState('green')\n\n  const callNotification = (message, color) => {\n    setNotifyColor(color)\n    setNotify(message)\n    setTimeout(() => {\n      setNotify(null)\n    }, 5000)\n    // setNotifyColor('green')\n  } \n\n  const personsHook = () => {\n    personsService\n      .getAll()\n      .then(allPersons => {\n        setPersons(allPersons)\n    })\n  }\n\n  useEffect(personsHook, [])\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n    const indexOfPersonExist = persons.map(p => p.name).indexOf(newPerson.name)\n    const existPersonID = indexOfPersonExist !== -1 ? persons[indexOfPersonExist].id : null\n    if(indexOfPersonExist !== -1) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one`)){\n        personsService\n          .update(existPersonID, newPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== existPersonID ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n      callNotification(`Edited ${newPerson.name}`, 'green')\n    } else {\n      personsService\n        .create(newPerson)\n        .then(returnedPerson => {\n          console.log(returnedPerson)\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n        })\n      callNotification(`Added ${newPerson.name}`, 'green')\n    }\n  }\n\n  const onDeleteHandler = (id) => {\n    const person = persons.find(person => person.id === id)\n    if(window.confirm(`Delete ${person.name} ?`)){\n      personsService\n        .deletePerson(id)\n        .then(deletedPerson => {\n          console.log(deletedPerson)\n          setPersons(persons.filter(person => person.id !== id))\n        })\n        .catch(error => {\n          console.log(error)\n          callNotification(`Information of ${person.name} has already been removed from server`, 'red')\n        })\n    }\n  }\n\n  const onChangeNameHandler = (event) => {\n    setNewName(event.target.value)\n  }\n  const onChangeNumberHandler = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const onChangeFilter = (event) => {\n    setFilter(event.target.value.toLocaleLowerCase())\n  }\n\n  const displayedPersons = filter ? persons.filter(person => person.name.includes(filter)) : persons;\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notify} color={notifyColor} />\n      <Search filter={filter} onChangeFilter={onChangeFilter} />\n      <h3>add a new</h3>\n      <PersonForm newName={newName}\n                  newNumber={newNumber}\n                  onSubmitHandler={onSubmitHandler}\n                  onChangeNameHandler={onChangeNameHandler}\n                  onChangeNumberHandler={onChangeNumberHandler} />\n      <h2>Numbers</h2>\n      <Persons persons={displayedPersons} onDeleteHandler={onDeleteHandler} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}